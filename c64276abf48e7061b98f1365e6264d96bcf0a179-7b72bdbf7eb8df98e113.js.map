{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-toml.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/prismjs/components/prism-json.js","webpack:///./node_modules/prismjs/components/prism-json5.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/prismjs/components/prism-typescript.js","webpack:///./src/components/doc-page-layout.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///./node_modules/prism-react-renderer/themes/github/index.js"],"names":["Prism","key","source","insertKey","pattern","replace","languages","toml","greedy","RegExp","lookbehind","alias","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","theme","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","prototype","hasOwnProperty","call","apply","this","newlineRe","normalizeEmptyLines","line","push","content","empty","appendTypes","add","typesSize","concat","themeToDict","language","base","create","themeDict","reduce","acc","themeEntry","includes","forEach","type","accStyle","root","objectWithoutProperties","exclude","k","indexOf","Highlight","Component","this$1","args","len","props","undefined","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","map","token","join","children","getStyleForToken","__proto__","constructor","render","code","grammar","tokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","pop","normalizeTokens","tokenize","getLineProps","getTokenProps","json","webmanifest","string","json5","extend","uniqueId","_","Token","util","encode","o","toString","match","objId","clone","visited","v","id","redef","lang","insertBefore","inside","before","insert","newToken","ret","DFS","callback","plugins","highlight","text","env","stringify","matchGrammar","strarr","index","startPos","oneshot","patterns","j","lookbehindLength","global","flags","pos","str","lastIndex","exec","from","to","p","delNum","slice","after","wrapped","Array","splice","hooks","rest","matchedStr","parent","element","tag","classes","attributes","aliases","keys","name","markup","tagName","includedCdataInside","def","xml","html","mathml","svg","envVars","insideString","bash","variable","toBeCopied","shell","clike","punctuation","c","cpp","css","addInlined","selector","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","openedBraces","plainText","javaDocLike","javadoclike","docLanguage","definition","isArray","l","docCommentSupport","addSupport","keywords","java","function","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","t","s","substring","middle","replacement","php","string_interpolation","test","parameterPrefix","jsdoc","actionscript","comment","interpolation","coffeescript","coffee","unshift","maybeClassNameTokens","flow","keyword","n4js","n4jsd","typescript","ts","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","filter","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","graphql","inner","createInline","starAlternative","tableCell","tableRow","tableLine","markdown","codeLang","codeBlock","trim","toLowerCase","cls","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","diff","PREFIXES","prefix","git","go","handlebars","less","makefile","objectivec","ocaml","python","py","reason","sass","atrule","operator","important","property","scss","sql","stylus","func","tsx","wasm","yaml","yml","typeInside","window","require","CodeHighlight","matches","groups","padding","SubMenu","Content","Sider","DocPage","pageMeta","useStaticQuery","allMdx","nodes","find","n","slug","uri","useState","selectedMenu","setSelectedMenu","itemClicked","useRef","scrollTo","location","hash","current","setTimeout","createLink","Tag","side","underline","useEffect","listener","ev","rect","getBoundingClientRect","top","history","pushState","selectMenu","addEventListener","removeEventListener","hashVisible","setHashVisible","onMouseOver","onMouseLeave","scrollMarginTop","position","title","cursor","left","transform","onClick","navigator","clipboard","writeText","protocol","host","pathname","search","marginTop","marginBottom","pageTitle","frontmatter","breakPoint","setBreakpoint","minHeight","path","breakpoint","collapsedWidth","width","onBreakpoint","height","zIndex","mode","defaultOpenKeys","tableOfContents","items","item","url","onSelect","e","dims","scrollX","selectedKeys","buildMenuItem","stop","Item","onTitleClick","margin","marginLeft","components","h1","h2","h3","h4","h5","h6","pre","Parent","Class","isNativeReflectConstruct","Reflect","construct","a","instance","Function","bind","setPrototypeOf","_cache","Map","fn","TypeError","has","get","set","Wrapper","getPrototypeOf"],"mappings":"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","file":"c64276abf48e7061b98f1365e6264d96bcf0a179-7b72bdbf7eb8df98e113.js","sourcesContent":["(function (Prism) {\n  var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n  /**\n   * @param {string} pattern\n   */\n\n  function insertKey(pattern) {\n    return pattern.replace(/__/g, function () {\n      return key;\n    });\n  }\n\n  Prism.languages.toml = {\n    'comment': {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'table': {\n      pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'class-name'\n    },\n    'key': {\n      pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    'string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'date': [{\n      // Offset Date-Time, Local Date-Time, Local Date\n      pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n      alias: 'number'\n    }, {\n      // Local Time\n      pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n      alias: 'number'\n    }],\n    'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'punctuation': /[.,=[\\]{}]/\n  };\n})(Prism);","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","import \"core-js/modules/es.array.reduce.js\";\nimport Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// https://www.json.org/json-en.html\nPrism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;","(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.json5 = Prism.languages.extend('json', {\n    'property': [{\n      pattern: RegExp(string.source + '(?=\\\\s*:)'),\n      greedy: true\n    }, {\n      pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n      alias: 'unquoted'\n    }],\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'number': /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n  });\n})(Prism);","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'number': {\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n    greedy: true\n  },\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n  'boolean': /\\b(?:true|false)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': [{\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    }, {\n      pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n      lookbehind: true\n    }],\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});\n/* \"prismjs/components/prism-javascript\" */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-javadoclike\" */\n\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);\n/* \"prismjs/components/prism-java\" */\n\n\n(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-markup-templating\" */\n\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-jsdoc\" */\n\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-flow\" */\n\n\n(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);\n/* \"prismjs/components/prism-n4js\" */\n\n\nPrism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {}\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\r?\\n|\\r)(?!\\r?\\n|\\r))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @param {boolean} starAlternative Whether to also add an alternative where all `_`s are replaced with `*`s.\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern, starAlternative) {\n    pattern = pattern.replace(/<inner>/g, inner);\n\n    if (starAlternative) {\n      pattern = pattern + '|' + pattern.replace(/_/g, '\\\\*');\n    }\n\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``.+?``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\r?\\n|\\r)|$)/.source.replace(/__/g, tableCell);\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\r?\\n|\\r)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /(^[ \\t]*(?:\\r?\\n|\\r))(?: {4}|\\t).+(?:(?:\\r?\\n|\\r)(?: {4}|\\t).+)*/m,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[(?:(?!\\])<inner>)+\\])/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'variable': {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'content': {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'string': {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      // pattern: /^(?:[_].*(?:\\r\\n?|\\n|(?![\\s\\S])))+/m\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n/* \"prismjs/components/prism-wasm\" */\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;\nexport default Prism;","(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  // eslint-disable-next-line regexp/no-dupe-characters-character-class\n  /\\b(?:asserts|infer|interface|module|namespace|type)(?!\\s*[^\\s_${}*a-zA-Z\\xA0-\\uFFFF])/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);","import React, { useEffect, useRef, useState } from \"react\";\nimport { Layout, Menu, Tooltip, Divider } from \"antd\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport \"../__generated__/gatsby-types\";\nimport { AppHeader } from \"./header\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport \"./doc-page-layout.scss\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/github\";\nimport { Helmet } from \"react-helmet\";\nimport Prism from \"prism-react-renderer/prism\";\n\n((typeof global !== \"undefined\" ? global : window) as any).Prism = Prism;\n\nrequire(\"prismjs/components/prism-toml\");\nrequire(\"prismjs/components/prism-json\");\nrequire(\"prismjs/components/prism-json5\");\nrequire(\"prismjs/components/prism-typescript\");\n\nconst CodeHighlight: React.FunctionComponent = props => {\n  if (!(props.children as any).props) {\n    return <pre {...props}></pre>;\n  }\n\n  const className = (props.children as any).props.className || \"\";\n  const matches = className.match(/language-(?<lang>.*)/);\n  return (\n    <Highlight\n      {...defaultProps}\n      code={(props.children as any).props.children.trim()}\n      language={\n        matches && matches.groups && matches.groups.lang\n          ? matches.groups.lang\n          : \"\"\n      }\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, padding: \"20px\" }}>\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\nfunction locationWithoutHash() {\n  return (\n    location.protocol +\n    \"//\" +\n    location.host +\n    location.pathname +\n    (location.search ? location.search : \"\")\n  );\n}\n\nconst DocPage: React.FunctionComponent<any> = props => {\n  const allPageMeta = useStaticQuery<GatsbyTypes.PageMetaQuery>(graphql`\n    query PageMeta {\n      allMdx {\n        nodes {\n          tableOfContents\n          slug\n          timeToRead\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  const pageMeta = allPageMeta.allMdx.nodes.find(\n    n => \"/\" + n.slug === props.uri\n  );\n\n  const [selectedMenu, setSelectedMenu] = useState(undefined);\n\n  const selectMenu = (value: string, side?: boolean) => {\n    history.pushState(null, null, value);\n    if (side) {\n      setSelectedMenu(value);\n    }\n  };\n\n  const generateTree = (item: any) => ({\n    title: item.title,\n    key: item.url,\n    children: item.items?.map(generateTree) ?? [],\n  });\n\n  const itemClicked = useRef(false);\n\n  const scrollTo = (value: string) => {\n    window.location.hash = value;\n    itemClicked.current = true;\n    setTimeout(() => {\n      itemClicked.current = false;\n    }, 200);\n  };\n\n  const createLink = (Tag: any, side?: boolean, underline?: boolean) => (\n    props: any\n  ) => {\n    let ref = useRef<HTMLElement>();\n\n    useEffect(() => {\n      const listener = (ev: Event) => {\n        if (!ref.current) {\n          return;\n        }\n\n        const rect = ref.current.getBoundingClientRect();\n\n        if (rect.top > 64 && rect.top < 100) {\n          if (!itemClicked.current) {\n            setTimeout(() => {\n              selectMenu(\"#\" + props.id, side);\n            }, 100);\n          }\n        }\n      };\n\n      window.addEventListener(\"scroll\", listener);\n\n      return () => {\n        window.removeEventListener(\"scroll\", listener);\n      };\n    }, []);\n\n    let [hashVisible, setHashVisible] = useState(false);\n\n    return (\n      <div\n        onMouseOver={() => {\n          setHashVisible(true);\n        }}\n        onMouseLeave={() => {\n          setHashVisible(false);\n        }}\n      >\n        <Tag\n          id={(props as any).id}\n          style={{\n            display: \"inline-block\",\n            scrollMarginTop: 80,\n            position: \"relative\",\n          }}\n          ref={ref}\n        >\n          <Tooltip title=\"Copy Link\">\n            <span\n              style={{\n                opacity: hashVisible ? 1 : 0,\n                cursor: \"pointer\",\n                position: \"absolute\",\n                top: \"50%\",\n                left: 0,\n                transform: \"translate(-150%, -50%)\",\n              }}\n              onClick={() => {\n                navigator.clipboard.writeText(\n                  `${locationWithoutHash()}#${(props as any).id}`\n                );\n              }}\n            >\n              #\n            </span>\n          </Tooltip>\n          {props.children}\n        </Tag>\n        {underline ? (\n          <Divider\n            type=\"horizontal\"\n            style={{ marginTop: \"0.2rem\", marginBottom: \"1rem\" }}\n          />\n        ) : undefined}\n      </div>\n    );\n  };\n\n  const createComponents = () => {\n    const components: { [key: string]: React.FunctionComponent } = {\n      h1: createLink(\"h1\", true, true),\n      h2: createLink(\"h2\", true),\n      h3: createLink(\"h3\"),\n      h4: createLink(\"h4\"),\n      h5: createLink(\"h5\"),\n      h6: createLink(\"h6\"),\n      pre: CodeHighlight,\n    };\n    return components;\n  };\n\n  const buildMenuItem = (item: any, stop?: boolean) => {\n    if (stop || (item.items?.length ?? 0) === 0) {\n      return (\n        <Menu.Item key={item.url} onClick={() => scrollTo(item.url)}>\n          {item.title}\n        </Menu.Item>\n      );\n    }\n\n    return (\n      <SubMenu\n        key={item.url}\n        title={item.title}\n        onTitleClick={() => scrollTo(item.url)}\n      >\n        {item.items.map(item => buildMenuItem(item, true))}\n      </SubMenu>\n    );\n  };\n\n  const pageTitle = pageMeta?.frontmatter.title;\n\n  const [breakPoint, setBreakpoint] = useState(false);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Helmet title={pageTitle ? `${pageTitle} — Taplo` : \"Taplo\"}></Helmet>\n      <AppHeader\n        path={props.uri}\n        title={pageMeta?.frontmatter.title}\n      ></AppHeader>\n      <Layout>\n        <Sider\n          breakpoint=\"md\"\n          collapsedWidth=\"0\"\n          theme=\"light\"\n          width={230}\n          onBreakpoint={setBreakpoint}\n          style={{\n            height: \"calc(100vh - 64px)\",\n            position: \"fixed\",\n            left: 0,\n            zIndex: 1,\n            top: 64,\n          }}\n        >\n          <Menu\n            mode=\"inline\"\n            defaultOpenKeys={(pageMeta?.tableOfContents as any)?.items?.map(\n              item => item.url\n            )}\n            onSelect={e => {\n              const elem = document.getElementById(e.key.toString().slice(1));\n\n              let dims = elem.getBoundingClientRect();\n              window.scrollTo(window.scrollX, dims.top + 100);\n\n              setSelectedMenu(e.key);\n            }}\n            selectedKeys={[selectedMenu]}\n          >\n            {(pageMeta?.tableOfContents as any)?.items?.map(item =>\n              buildMenuItem(item)\n            )}\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: \"0 24px 24px\" }}>\n          <Content\n            className=\"page-content\"\n            style={{\n              backgroundColor: \"#FFF\",\n              padding: 24,\n              margin: 0,\n              marginTop: 88,\n              marginLeft: breakPoint ? undefined : 230,\n              minHeight: 280,\n            }}\n          >\n            <MDXProvider components={createComponents()}>\n              {props.children}\n            </MDXProvider>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default DocPage;\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;"],"sourceRoot":""}